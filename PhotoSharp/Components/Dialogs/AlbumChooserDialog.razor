@using Application.Albums
@using PhotoSharp.Components.Pages.Album
@inject IAlbumService AlbumService
@if (IsOpen)
{
<div class="modal show d-block" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Choose Album</h5>
                <button type="button" class="close" @onclick="CloseDialog">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @foreach (var album in _albums)
                {
                <div class="list-group-item list-group-item-action" @onclick="() => SelectAlbum(album.Id)">
                    @album.Name
                </div>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" @onclick="CloseDialog">Close</button>
            </div>
        </div>
    </div>
</div>
<div class="modal-backdrop show"></div>
}

@code {
    [Parameter]
    public bool IsOpen { get; set; }

    [Parameter]
    public EventCallback<bool> IsOpenChanged { get; set; }
    
    private List<EF.Models.Models.Album> _albums = [];
    
    [Parameter]
    public EventCallback<Guid> OnAlbumSelected { get; set; }
    
    private async Task CloseDialog()
    {
        IsOpen = false;
        await IsOpenChanged.InvokeAsync(IsOpen);
    }
    
    private async Task SelectAlbum(Guid albumId)
    {
        await OnAlbumSelected.InvokeAsync(albumId);
        await CloseDialog();
    }
    
    protected override async Task OnInitializedAsync()
    {
        _albums = await AlbumService.GetAlbumsAsync();
    }
}