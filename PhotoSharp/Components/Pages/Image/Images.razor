@page "/image"
@using Application.Images
@inject IImageService ImageService
@rendermode InteractiveServer

<PageTitle>Images</PageTitle>

<h1>Images</h1>

<div class="image-grid">
    @foreach (var image in _images)
    {
        <a href="/image/@image.Id" class="image-link">
            <img src="/api/images/@image.Id/thumbnail" alt="@image.Name" class="image-thumbnail">
        </a>
    }
</div>

<div class="paging-buttons">
    <button @onclick="PreviousPage" disabled="@(_currentPage == 0)">Previous</button>
    <span>Page @(_currentPage + 1) of @(TotalPages)</span>
    <button @onclick="NextPage" disabled="@(_currentPage == TotalPages - 1)">Next</button>
</div>

@code {
    private List<EF.Models.Models.Image> _images = [];
    private int _imageCount;
    private int _currentPage;
    private const int PageSize = 20;
    private int TotalPages => (_imageCount + PageSize - 1) / PageSize;

    protected async override Task OnInitializedAsync()
    {
        await LoadImages();
    }

    private async Task LoadImages()
    {
        _images = await ImageService.GetImagesAsync(_currentPage, PageSize);
        _imageCount = await ImageService.GetImagesCountAsync();
    }

    private async Task NextPage()
    {
        if (_currentPage < TotalPages - 1)
        {
            _currentPage++;
            await LoadImages();
        }
    }

    private async Task PreviousPage()
    {
        if (_currentPage > 0)
        {
            _currentPage--;
            await LoadImages();
        }
    }
}