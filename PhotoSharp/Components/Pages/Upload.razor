@page "/upload"
@using Application.Images
@rendermode InteractiveServer
@inject IImageService ImageService

<PageTitle>Upload</PageTitle>

<h1 class="title">Upload Images</h1>

<div class="upload-container">
    <InputFile OnChange="LoadFiles" multiple class="upload-input"/>
    <div class="progress-container" style="display:@(progressVisible ? "block" : "none")">
        <div class="progress-bar" style="width:@progress%"></div>
    </div>
    <div class="file-list">
        @foreach (var fileName in uploadedFiles)
        {
            <div class="file-item">@fileName</div>
        }
    </div>
</div>

@code {
    private List<string> uploadedFiles = [];
    private int progress = 0;
    private bool progressVisible = true;

    private async Task LoadFiles(InputFileChangeEventArgs e)
    {
        var files = e.GetMultipleFiles();
        progressVisible = true;
        uploadedFiles.Clear();
        progress = 0;
        foreach (var file in files)
        {
            await using var stream = file.OpenReadStream();
            await ImageService.UploadImagesFromBrowserAsync(stream, file.Name, file.ContentType);
            uploadedFiles.Add(file.Name);
            progress = (int)((uploadedFiles.Count / (double)files.Count) * 100);
            StateHasChanged();
        }
        progressVisible = true;
    }
}